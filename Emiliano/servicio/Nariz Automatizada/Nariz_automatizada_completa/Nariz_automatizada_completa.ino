/********************************************************************
 * Automatización de la Nariz Electrónica a través de un
 * algoritmo de red neuronal previamente entrenada para la detección 
 * de Papaya, Naranja y Manzana.
 *
 * Parametros de la red neuronal
 * Red Neuronal con:
 *    5 entradas, 
 *    5 neuronas en la capa oculta,
 *    3 neuronas en la capa de salida
 *    Función de transferencia: sigmoidal tanto para la capa oclta como
 *    para la capa de salida.
 *    Valores de Salida:
 *       [0 0 0] - Reposo
 *       [1 0 0] - Papaya
 *       [0 1 0] - Naranja
 *       [0 0 1] - Manzana
 ********************************************************************/

#include <math.h>

/********************************************************************
 * Configuración de las entradas analógicas para los Sensores de Gas
 ********************************************************************/
 


void setup(){
  Serial.begin(9600);
}

//{434,209,178,154,243};
void loop(){

int sensorH = A0;
int sensor5 = A1;
int sensor4 = A2;
int sensor3 = A3;
int sensor2 = A4;
int sensor1 = A5;

const int NodosEntrada = 5; 
const int NodosOcultos = 25; 
const int NodosSalida = 12;

float entradasOriginales[NodosEntrada];

  float valoresEntrada[NodosEntrada] = {
      analogRead(sensor1),
      analogRead(sensor2),
      analogRead(sensor3),
      analogRead(sensor4),
      analogRead(sensor5)
  };
  for(int i = 0; i < NodosEntrada; i++){
    entradasOriginales[i] = valoresEntrada[i];
  }
  
  float salida[NodosSalida];
  
  RedNeuronal(valoresEntrada, salida);
  
  //Pocesamiento de la salida
  Serial.print("[ ");
  for(int i=0; i < NodosEntrada; i++){
    Serial.print(entradasOriginales[i]);
    Serial.print(", ");
  }
  Serial.print("] -> ");
  
  Serial.print("[ ");
  for(int i = 0; i < NodosSalida; i++){
    Serial.print(round(salida[i]));  
    Serial.print(" ");
  }
  Serial.println("]");
  delay(1000);
}


/**********************************************************************************
 * Algoritmo de la Red Neuonal 
 * 
***********************************************************************************/
void RedNeuronal (float *valoresEntrada, float *salida){
const int NodosEntrada = 5; 
const int NodosOcultos = 25; 
const int NodosSalida = 12;
  
  /********************************************************************
   * Pesos y Bias resultantes del entrenamiento
   * wh - Pesos capa oculta
   * bh - Bias de la capa oculta
   * wy - Pesos de la capa de salida
   * by - Bias de la capa de salida
   * minh, maxh, miny, maxy, minX y maxX - valores minimos y maximos
   * en las capas de entrada, oculta y salida
  *********************************************************************/
  float wh[NodosOcultos][NodosEntrada] = {
    {1.55408395937549,-1.1043226704367,-0.625150290104056,1.24415381461713,0.865250653343528},
    {-0.333987097784205,-0.721206585341943,3.37352488434145,-5.07322911980152,-2.07693340364123},
    {3.23458950700433,0.347643021946314,-1.28135412457736,0.94899980165098,2.41451308411358},
    {0.73755571842081,-0.307103639499357,1.31610689318514,1.0891671541182,-1.25840823115218},
    {1.88387842681684,-1.65183585259758,-1.64030545169325,-2.34994972284738,0.556300483132932},
    {-1.35461454319773,-2.30456394544789,1.74222638351933,4.64579347860536,-4.08920369046555},
    {0.911512878262343,-0.687964937002176,-2.46693089254783,3.83277146721375,2.6263573246251},
    {1.60980792120236,1.48846694682671,1.84308113164075,-1.90318108441105,-1.93327299769628},
    {-1.87181456572532,4.23498891806437,-1.39276939550489,0.270771734751143,4.77378624393709},
    {-3.10625185832877,2.66204697303493,-2.62654469546129,2.02255102281772,1.77333964466985},
    {3.16854667310274,1.29749804121902,0.647678122325151,-2.95896800399441,-1.76792085284138},
    {-1.49521881128769,0.162684816915563,-1.79043840734895,2.64758258162315,-2.40661731091662},
    {-5.01819955938409,-3.30659996574816,5.64265639836916,-0.389009408609506,6.31937420930363},
    {-1.63076639825592,-0.997729023851589,-0.818577350898095,1.31979462160145,5.58784845085715},
    {-2.61656425386974,8.2977006266966,-4.27825739821356,-1.5461371969564,0.793943321903053},
    {0.878922030081364,-0.328108064649365,-3.1773166170187,0.081559071001873,-2.36868934127933},
    {-1.47736692735067,1.66772112628762,0.955522208402223,-0.196235029200871,0.59805155584256},
    {-3.36885899509364,-4.59955782636701,-1.90820280643489,1.4138927195772,4.25399082272429},
    {1.19819274043971,-1.06120482471591,-1.58137548688622,2.50679014058705,1.61501257433724},
    {-0.540765676968998,1.61595754714596,0.796249351744687,-0.283902490772289,-0.832290099808185},
    {1.80196111891944,-2.34067588872055,-2.08705122395094,-2.99778322388381,1.63442160408197},
    {-1.45168708486448,-1.05310278091344,-1.8741268561232,-5.99355290690346,-0.0616270122960302},
    {2.49845729747482,1.32399288203247,-2.16710349394517,1.87923628810006,2.6600615494305},
    {2.53996399982555,5.14185135979011,2.54327162130693,-1.15077371703066,1.113372181441},
    {0.80389908913203,0.586142511660586,-1.28908862978698,-1.36198806236759,-0.388669177147121}
  };
  
  float bh[NodosOcultos] = {-3.25673418641350,
                          -4.67455287457812,
                          -2.39804069646148,
                          -2.93957449457904,
                          -1.46547280646267,
                          -4.41059680162024,
                          1.93339038022594,
                          -0.809827058896212,
                          2.14438740572098,
                          1.69080652722725,
                          -0.131990014101936,
                          0.493648372916902,
                          1.58854041908499,
                          -0.322399657615589,
                          0.0582852552055929,
                          -1.69901263478675,
                          -1.93846044860296,
                          -4.36334133417541,
                          2.14788928277565,
                          -2.52372088439491,
                          1.60589968685329,
                          -1.27876722451295,
                          1.52318364566735,
                          7.91223838358097,
                          3.50250393587091};
  
  float wy[NodosSalida][NodosOcultos] = {
    {1.33207172479862,0.804140230099447,0.368115896613625,0.889600211928728,0.155162507367389,-0.544207251442403,-0.181318398559966,0.68306184209679,2.41693940832994,-0.731218206889194,-0.10435151787851,-0.201471851936174,6.68671761426208,4.23059789803329,0.387082949277582,1.32004735837386,0.40441915856025,1.7206196285937,-0.353322538922068,1.27552663967041,2.6127255192678,-0.362890507422012,0.0332615992517899,-7.07232940034775,-0.949816393865437},
    {1.14354176610796,0.734999649826835,-1.65414604090916,1.55362454804628,0.127857415445819,-0.752255905953307,0.186707901542235,0.390409425771244,0.628619089578416,0.226614155673757,-1.04561897671483,2.26791973201777,3.13629932785329,-1.47963408360338,2.24884897728722,0.247572286813233,1.63931357130268,-3.26383461117811,-0.58998789202003,0.55580889398027,-1.11297586041629,-0.71224404712748,-1.2137047409138,0.259458671692881,-1.32221484338959},
    {0.829032375346195,1.23988187905173,0.635657718236417,1.38011358367044,0.134250819320279,2.91097605501153,-0.168049479771649,0.106162538818153,-2.19885958520263,-0.385588968363862,0.289146833861494,0.256688506289453,2.50043607356119,-1.61899877673807,-2.52994541255259,0.569982397303614,0.476132665173082,4.63466755085473,-0.259897070276759,1.21928815868577,0.345214956644339,-2.96499666649748,-2.91152946891068,4.97166051902065,-0.840892670950985},
    {0.851084687300211,1.17161675266809,1.42436533035212,1.6661551037825,-1.32188102085649,2.63724836893398,0.447955967491669,0.333384850286087,-0.934515370374828,0.455733924765364,-1.14476105843501,0.0550769904976122,-4.91510880250611,-2.16544908071193,-0.0208966728234684,-0.273321735128427,1.15120343297886,-0.701213654578057,0.213358878158389,1.09594142141387,0.977446681007186,-1.10643625404892,-0.63501808482292,-1.98897504273116,-0.779601778164353},
    {0.395044544452351,0.603932131218688,1.08720665930364,0.846693097582893,-0.267121793612266,4.84554388597649,-0.0777951885134225,0.117203295974031,3.45659761742616,-0.830223789641599,0.303664907520862,-0.229700729963265,-2.18696087214235,0.00328163640210979,7.00218973389882,1.72967735084749,0.570668097021813,3.92326416372204,-0.55337806098574,1.3199609948294,-2.89316504694605,3.77883680439621,-0.877727820216359,-1.10538790323097,-0.951861959742446},
    {1.93839458167959,0.550703061297385,1.51483006217777,1.46986112304904,-1.0911531087735,-2.2427209094428,0.358748213151151,0.106320595495823,2.16953570387041,1.91080520941055,-1.83015645439295,0.597398394011204,-3.66207944587164,0.0798975151828092,5.46993922994859,2.03207580772432,1.07963514986707,1.07855651471179,0.00658061118170214,1.32188196035986,0.0026371909448092,1.55222784579875,-0.205013784522705,1.59798277691464,-0.496467164984932},
    {1.36852848588643,0.208003608692171,2.45263454764069,0.924998308856273,0.369952674035514,-2.19568889961607,0.424826472143307,-0.195506800540682,0.523636847590919,0.6479408749195,-0.723525670063473,-1.81909939468153,1.17236989296803,-0.0180616694546433,-1.87243617472161,-0.536593451825672,-0.730172962227274,2.95781564083238,-0.362821288880237,0.213177015076475,2.54313405600718,-0.639237063029975,-0.317748361577146,1.16098898736264,0.591265973845422},
    {0.857772575489838,-0.535395771010028,0.733821014268884,1.15434953216435,1.81093895830783,0.163597638602822,1.49167746063615,-0.0662700935408177,-2.09220814628824,1.54469653515149,-1.8859372891098,-0.343399576615637,-1.22599806409477,-0.96193662669175,-0.253940945583515,-0.633197634388108,1.22355747079485,0.031663763703646,0.664769187708458,0.975189828610229,-1.29792978722445,2.49289733069414,0.212854847688955,-0.813133825105954,-1.22252207899248},
    {0.547077714088611,-0.702700317003591,0.890958495117351,1.13168551226386,1.80548712350018,0.0268039809793239,-0.249418701395706,-2.02079878462258,1.78706586217477,1.38838814279419,2.86079128174418,0.560582436872778,-0.492888878199337,-0.468617436540453,3.52497936125242,0.790927869439842,0.892169263385607,-1.77533102007368,0.412809078320544,0.697286275891882,-0.657480460305646,1.38030345340107,-0.0518428620153973,0.830833475583865,-1.49810470648411},
    {0.838454782572343,3.55596676127025,0.353766781506682,-0.0647130446344774,0.927669885630275,0.897556963375657,-1.63694825823188,1.1532498569441,-1.66926845147075,0.354052703492541,-0.342958642788448,-1.52342076225229,0.62847574638281,-0.0567705294452931,-1.41891335208554,-2.31094516652426,0.0785853404791588,0.630238866048556,-2.41081926893787,-0.0218875816104472,-0.504845317865744,2.2951305675117,-1.46779142589268,-1.35302557690814,-0.242001074166819},
    {0.844894722994378,-5.09730476221738,0.871907715030364,0.989400769660996,-1.59900358506075,-0.139918184775306,-4.0950947795089,0.505197198537724,1.26486689626679,-4.551170160507,1.3693858587928,-0.661192390762171,-0.31327193877895,-1.00018357371872,0.177166725603052,1.20763256101948,1.42034014716953,0.197379470716182,2.24319705854883,1.31481055832899,-0.2446334338725,-2.08233535228542,-1.9880757461449,-2.44653117901782,-0.714827244471666},
    {1.88971700773394,-0.119296720079656,0.774082225968464,1.20608809756109,1.45998175357493,1.22152342534454,1.67902784644052,0.878619871606888,-1.29716204791375,-1.89924267773075,1.08321860863918,0.163688718511272,0.429175400097009,0.0715717789225189,-1.33462969783628,-0.246622453521409,0.861993265233904,-0.801979816816321,2.00902784061642,0.0473688707267078,-0.749325743614451,-0.938224468493303,0.229300726109127,0.390420806924031,-1.42319874452984}
  };
  
  float by[NodosSalida] = {-2.39041814960659,
                          -0.308761091635939,
                          -0.0658656948663389,
                          -0.667276550492073,
                          -0.624646858334158,
                          -1.78572147857071,
                          -0.662508614747756,
                          -1.38389872142537,
                          -2.05258748595340,
                          0.245103016758037,
                          0.406938924298525,
                          0.415625338410665};

  float minh[NodosEntrada] = {136,39,50,37,31};
  float maxh[NodosEntrada] = {539,165,286,106,477};
  float miny = -1;
  float maxy = 1;
  float minX = 0;
  float maxX = 1;
  float yh[NodosOcultos];
  /**********************************************************************
   * Procesamiento de los valores de entrada de acuerdo a los máximos y
   * mínimos
   **********************************************************************/
  for(int i = 0; i < NodosEntrada; i++){
    valoresEntrada[i] = valoresEntrada[i] - minh[i];
    valoresEntrada[i] = valoresEntrada[i] * (1/(maxh[i] - minh[i]));
    valoresEntrada[i] = valoresEntrada[i] * (maxy - miny);
    valoresEntrada[i] = valoresEntrada[i] + miny;
  }
  /***************************************************************************
   * Calculo de las salidas de la capa oculta utilizando funcion sigmoidal
   ***************************************************************************/
  for(int i = 0; i < NodosOcultos; i++){
    float suma = bh[i];
    for(int j = 0; j < NodosEntrada; j++){
      suma += (valoresEntrada[j] * wh[i][j]);
    }
    yh[i] = (2/(1 + exp(-2*suma)) - 1);
  }
  /***************************************************************************
   * Calculo de las salidas de la capa de salida utilizando funcion sigmoidal
   ***************************************************************************/
  for(int i = 0; i < NodosSalida; i++){
    float suma = by[i];
    for(int j = 0; j < NodosOcultos; j++){
      suma +=  (yh[j] * wy[i][j]);
    }
    salida[i] = (2/(1 + exp(-2*suma)) - 1);
  }
  /**********************************************************************
   * Procesamiento de las salidas de la capa de salida para obtener
   * la salida de la red neuronal
   **********************************************************************/
  for(int i = 0; i < NodosSalida; i++){
    salida[i] = salida[i] - miny;
    salida[i] = salida[i] * (1/(maxy - miny));
    salida[i] = salida[i] * (maxX - minX);
    salida[i] = salida[i] + minX;
  }
}
